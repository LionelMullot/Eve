# - Find zlib
# Find the native ZLIB includes and library
#
#  ZLIB_INCLUDE_DIR - where to find zlib.h, etc.
#  ZLIB_LIBRARY     - List of libraries when using zlib.
#  ZLIB_FOUND       - True if zlib found.
#
#  Modified by Nicolas Schlumberger, (c) 2007
#  to make it work on the Tardis Infrastucture of the ETH Zurich
#
# Several changes and additions by Fabian 'x3n' Landau
#                 > www.orxonox.net <

IF (ZLIB_INCLUDE_DIR)
  SET(ZLIB_FIND_QUIETLY TRUE)
ENDIF (ZLIB_INCLUDE_DIR)

FIND_PATH(ZLIB_HEADER_INCLUDE_DIR zlib.h
	${OPTION_BUILD_PATH_SOURCE_EXTERNAL}/zlib/ 
	NO_DEFAULT_PATH
  )
  
FIND_PATH(ZLIB_CONF_INCLUDE_DIR zconf.h
   ${CMAKE_INCLUDE_OUTPUT_DIRECTORY}/zlib/
   NO_DEFAULT_PATH
)
  
SET( ZLIB_INCLUDE_DIR ${ZLIB_HEADER_INCLUDE_DIR} ${ZLIB_CONF_INCLUDE_DIR})

IF(UNIX)
	SET(ZLIB_NAMES z zlib zdll)
	SET(ZLIB_STATIC_NAMES zlibstatic.a zlibstaticd.a)
	SET(ZLIB_LIB_PATH ${CMAKE_LIBRARY_OUTPUT_DIRECTORY})
	SET(ZLIB_STATIC_PATH ${CMAKE_LIBRARY_OUTPUT_DIRECTORY})
ENDIF(UNIX)

IF(WIN32)
	SET(ZLIB_NAMES zlib)
	SET(ZLIB_STATIC_NAMES zlibstatic.lib zlibstaticd.lib)
	SET(ZLIB_LIB_PATH ${CMAKE_LIBRARY_OUTPUT_DIRECTORY}/${CMAKE_CONFIGURATION_TYPES})
	SET(ZLIB_STATIC_PATH ${CMAKE_LIBRARY_OUTPUT_DIRECTORY}/${CMAKE_CONFIGURATION_TYPES})
ENDIF(WIN32)

IF(APPLE)
	SET(ZLIB_NAMES zlib)
	SET(ZLIB_STATIC_NAMES libzlibstatic.a libzlibstaticd.a)
	SET(ZLIB_LIB_PATH ${CMAKE_LIBRARY_OUTPUT_DIRECTORY}/${CMAKE_CONFIGURATION_TYPES})
	SET(ZLIB_STATIC_PATH ${CMAKE_LIBRARY_OUTPUT_DIRECTORY}/${CMAKE_CONFIGURATION_TYPES})
ENDIF(APPLE)

MESSAGE (STATUS "  searching zlib library in : ${ZLIB_LIB_PATH}")
FIND_LIBRARY(ZLIB_SHARED_LIBRARY
    NAMES ${ZLIB_NAMES}
    PATHS ${ZLIB_LIB_PATH}
  )
  
FIND_LIBRARY(ZLIB_LIBRARY
		NAMES ${ZLIB_STATIC_NAMES}
		PATHS ${ZLIB_STATIC_PATH}
)

SET(ZLIB_FOUND FALSE)
IF (ZLIB_INCLUDE_DIR AND ZLIB_LIBRARY)
  SET(ZLIB_FOUND TRUE)
ENDIF (ZLIB_INCLUDE_DIR AND ZLIB_LIBRARY)

IF (ZLIB_FOUND)
  IF (NOT ZLIB_FIND_QUIETLY)
    MESSAGE(STATUS "ZLIB was found.")
    IF (VERBOSE_FIND)
      MESSAGE (STATUS "  include path: ${ZLIB_INCLUDE_DIR}")
      MESSAGE (STATUS "  library path: ${ZLIB_LIBRARY}")
      MESSAGE (STATUS "  libraries:    zlib")
    ENDIF (VERBOSE_FIND)
  ENDIF (NOT ZLIB_FIND_QUIETLY)
ELSE (ZLIB_FOUND)
  IF (NOT ZLIB_INCLUDE_DIR)
    MESSAGE(SEND_ERROR "ZLIB include path was not found.")
  ENDIF (NOT ZLIB_INCLUDE_DIR)
  IF (NOT ZLIB_LIBRARY)
    MESSAGE(SEND_ERROR "ZLIB was not found.")
    MESSAGE(STATUS "Looked for Z libraries named ${ZLIBS_NAMES}.")
  ENDIF (NOT ZLIB_LIBRARY)
ENDIF (ZLIB_FOUND)

MARK_AS_ADVANCED(
  ZLIB_LIBRARY
  ZLIB_INCLUDE_DIR
)
